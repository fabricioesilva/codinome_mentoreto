# Generated by Django 4.2.1 on 2023-05-23 00:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mentorias.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mentorias', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArquivosAluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo_arquivo', models.CharField(max_length=50, verbose_name='Nome do arquivo')),
                ('arquivo', models.FileField(upload_to=mentorias.models.user_directory_path, validators=[mentorias.models.file_size], verbose_name='Arquivo')),
            ],
        ),
        migrations.CreateModel(
            name='Gabaritos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=50, verbose_name='Título do Gabarito')),
                ('questao_qtd', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Quantidade de questões')),
                ('respostas_gabarito', models.JSONField(verbose_name='Respostas do Gabarito')),
            ],
        ),
        migrations.AlterField(
            model_name='programas',
            name='arquivos_programa',
            field=models.ManyToManyField(help_text='Arquivos de um Programa são arquivos disponíveis aos estudantes                 que fizerem parte do Programa.', to='mentorias.arquivosprograma'),
        ),
        migrations.CreateModel(
            name='Turmas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mentor_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email do Mentor')),
                ('titulo', models.CharField(max_length=100, verbose_name='Título da Turma')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Data criação:')),
                ('descricao', models.CharField(blank=True, help_text='Inclua uma descrição resumida da Turma, que fica disponível para o estudante.', max_length=100, null=True, verbose_name='Descrição do Programa')),
                ('controle', models.TextField(blank=True, help_text='Anote o que quiser neste espaço. Apenas você terá acesso a este conteúdo.', null=True, verbose_name='Anotações da Turma para seu controle.')),
                ('termino_turma', models.DateField(blank=True, help_text='Data do término do estudo com esta turma.', null=True, verbose_name='Data do término')),
                ('programa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mentorias.programas')),
            ],
        ),
        migrations.CreateModel(
            name='Simulados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor_name', models.CharField(blank=True, max_length=50, null=True)),
                ('titulo', models.CharField(max_length=50, verbose_name='Título do simulado')),
                ('questao_tipo', models.SmallIntegerField(choices=[(1, 'A-D'), (2, 'A-E'), (3, 'Certo/Errado')], verbose_name='Tipo de questões')),
                ('questao_qtd', models.PositiveSmallIntegerField(verbose_name='Quantidade de questões no simulado')),
                ('instrucao', models.TextField(blank=True, null=True, verbose_name='Instruções ao aluno que fará o simulado')),
                ('data_aplicacao', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data da liberação')),
                ('arquivo_prova', models.FileField(upload_to=mentorias.models.user_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf']), mentorias.models.file_size], verbose_name='Arquvio com a prova')),
                ('gabarito', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mentorias.gabaritos', verbose_name='Gabarito do Simulado')),
                ('mentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RespostasSimulados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor_nome', models.CharField(blank=True, max_length=50, null=True, verbose_name='Criado por:')),
                ('aluno_nome', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome do aluno')),
                ('respostas_alunos', models.JSONField(verbose_name='Respostas do Aluno')),
                ('simulado', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mentorias.simulados')),
                ('student_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Materias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=50, verbose_name='Título da matéria')),
                ('peso', models.PositiveSmallIntegerField(default=1, help_text='Indique o peso da matéria para fins de cálculo de resultado final.', verbose_name='Peso da matéria')),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Alunos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_aluno', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Aluno')),
                ('email_aluno', models.EmailField(blank=True, help_text='Este email precisa bater com o email utilizado pelo estudante para se cadastrar.', max_length=254, null=True, verbose_name='Email do Aluno')),
                ('telefone_aluno', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone do Aluno')),
                ('situacao_matricula', models.CharField(choices=[('ok', 'Aluno matriculado e em dia.'), ('at', 'Aluno matriculado, mas com pagamento atrasado.'), ('cl', 'Ex-aluno.')], default='ok', help_text='Se é aluno atual, ou ex-aluno. E se está em dia, ou não.', max_length=2, verbose_name='Matrícula ativa ou inativa, ou pagamento atrasado')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do cadastramento do aluno')),
                ('controle', models.TextField(blank=True, help_text='Anote o que achar necessário para fins de controle do aluno. Aluno não tem acesso a este conteúdo.', null=True)),
                ('nivel_preparo', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Iniciante'), (2, 'Intermediário'), (3, 'Avançado')], null=True, verbose_name='Nível de preparo para o objetivo final.')),
                ('perfil_psicológico', models.CharField(blank=True, choices=[('san', 'Sanguíneo'), ('fle', 'Fleumático'), ('col', 'Colérico'), ('mel', 'Melancólico')], max_length=3, null=True, verbose_name='Perfil psicológico do aluno')),
                ('arquivos_aluno', models.ManyToManyField(help_text='Arquivos de um Aluno são arquivos disponíveis ao estudante selecionado.', to='mentorias.arquivosaluno')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_alunos', to=settings.AUTH_USER_MODEL)),
                ('simulados_realizados', models.ManyToManyField(help_text='Simulados que os alunos devem fazer.', to='mentorias.simulados')),
                ('student_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_alunos', to=settings.AUTH_USER_MODEL)),
                ('turma_matriculada', models.ManyToManyField(to='mentorias.turmas', verbose_name='Turma matriculada')),
            ],
        ),
    ]
