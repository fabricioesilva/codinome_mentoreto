# Generated by Django 4.2.1 on 2023-07-28 23:51

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mentorias.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alunos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_aluno', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Aluno')),
                ('email_aluno', models.EmailField(help_text='Este email precisa bater com o email utilizado pelo estudante para se cadastrar.', max_length=254, verbose_name='Email do Aluno')),
                ('telefone_aluno', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone do Aluno')),
                ('situacao_aluno', models.CharField(choices=[('at', 'Ativo'), ('ex', 'Ex-aluno')], default='at', help_text='Se é aluno atual, ou ex-aluno.', max_length=2, verbose_name='Situação')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data do cadastramento do aluno')),
                ('controle', models.TextField(blank=True, help_text='Anote o que achar necessário para fins de controle do aluno. Aluno não tem acesso a este conteúdo.', null=True)),
                ('nivel_preparo', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Iniciante'), (2, 'Intermediário'), (3, 'Avançado')], default=1, null=True, verbose_name='Nível de preparo para o objetivo final.')),
                ('perfil_psicológico', models.CharField(blank=True, choices=[('san', 'Sanguíneo'), ('fle', 'Fleumático'), ('col', 'Colérico'), ('mel', 'Melancólico')], max_length=3, null=True, verbose_name='Perfil psicológico do aluno')),
            ],
            options={
                'ordering': ['nome_aluno', '-pk'],
            },
        ),
        migrations.CreateModel(
            name='AplicacaoSimulado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('simulado_titulo', models.TextField(blank=True, null=True, verbose_name='Titulo do simulado')),
                ('resposta_alunos', models.JSONField(blank=True, null=True, verbose_name='Resposta do Aluno')),
                ('criada_em', models.DateField(default=datetime.date.today, verbose_name='Data')),
                ('data_resposta', models.DateField(blank=True, null=True, verbose_name='Data da resposta')),
                ('aplicacao_agendada', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Agendar')),
                ('senha_do_aluno', models.TextField(blank=True, default=mentorias.models.get_random_string, null=True, verbose_name='Senha para acesso')),
                ('aluno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aplicacao_aluno', to='mentorias.alunos')),
            ],
            options={
                'ordering': ['-criada_em'],
            },
        ),
        migrations.CreateModel(
            name='ArquivosDoAluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor_nome', models.CharField(blank=True, max_length=50, null=True, verbose_name='Criado por:')),
                ('arquivo_aluno', models.FileField(help_text='Insira arquivo em .pdf de até 5MB de tamanho.', null=True, upload_to=mentorias.models.aluno_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf']), mentorias.models.file_size], verbose_name='Arquvio mentoria')),
                ('email_aluno', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email do Aluno')),
            ],
        ),
        migrations.CreateModel(
            name='ArquivosMentoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor_nome', models.CharField(blank=True, max_length=50, null=True, verbose_name='Criado por:')),
                ('titulo_arquivo', models.CharField(max_length=50, null=True, verbose_name='Nome do arquivo')),
                ('arquivo_mentoria', models.FileField(help_text='Insira arquivo em .pdf de até 5MB de tamanho.', null=True, upload_to=mentorias.models.user_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf']), mentorias.models.file_size], verbose_name='Arquvio mentoria')),
                ('mentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Descontos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=50, verbose_name='Nome comercial do desconto')),
                ('abreviatura', models.CharField(blank=True, max_length=20, null=True, verbose_name='Abreviatura')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('criado_em', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Criado em')),
                ('criado_por_pk', models.PositiveIntegerField(blank=True, null=True)),
                ('criado_por_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('criado_por_nome', models.CharField(blank=True, max_length=50, null=True)),
                ('ativo', models.BooleanField(default=False, verbose_name='Em uso')),
                ('desconto', models.FloatField(default=0)),
                ('prazo_duracao', models.PositiveIntegerField(blank=True, null=True, verbose_name='Dias duração do desconto')),
                ('encerramento', models.DateTimeField(blank=True, null=True, verbose_name='Encerramento')),
                ('criado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
        ),
        migrations.CreateModel(
            name='LinksExternos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Titulo do link')),
                ('link_url', models.URLField(blank=True, null=True, verbose_name='Link')),
                ('descricao', models.CharField(blank=True, help_text='Escreva uma breve descrição, caso você deseja comunicar-se com o aluno à respeito do link.', max_length=100, null=True, verbose_name='Descrição')),
            ],
        ),
        migrations.CreateModel(
            name='MatriculaAlunoMentoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criada_em', models.DateField(auto_now_add=True, verbose_name='Data da matrícula')),
                ('encerra_em', models.DateField(blank=True, null=True, verbose_name='Encerramento mentoria')),
                ('estatisticas', models.JSONField(blank=True, null=True, verbose_name='Estatísticas')),
                ('senha_do_aluno', models.TextField(blank=True, default=mentorias.models.get_random_string, null=True, verbose_name='Senha para acesso')),
                ('aluno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mentorias.alunos')),
            ],
            options={
                'ordering': ['aluno'],
            },
        ),
        migrations.CreateModel(
            name='Simulados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor_name', models.TextField(blank=True, null=True)),
                ('mentor_username', models.TextField(blank=True, null=True)),
                ('titulo', models.TextField(verbose_name='Título do simulado')),
                ('questao_tipo', models.SmallIntegerField(blank=True, choices=[(1, 'A-D'), (2, 'A-E'), (3, 'Certo/Errado')], null=True, verbose_name='Tipo de questões')),
                ('criado_em', models.DateField(auto_now_add=True, verbose_name='Criado')),
                ('questao_qtd', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Quantidade de questões no simulado')),
                ('pontuacao', models.PositiveIntegerField(null=True, verbose_name='Pontuação máxima')),
                ('instrucao', models.TextField(blank=True, help_text='Se desejar, seus alunos poderão receber instruções para a realização do simulado.', null=True, verbose_name='Instruções ao aluno que fará o simulado')),
                ('data_aplicacao', models.DateField(default=django.utils.timezone.now, verbose_name='Data prevista para aplicação')),
                ('arquivo_prova', models.FileField(upload_to=mentorias.models.user_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf']), mentorias.models.file_size], verbose_name='Arquvio com a prova')),
                ('controle', models.TextField(blank=True, help_text='Anotações da Mentoria para seu controle. Apenas você terá acesso a este conteúdo.', null=True, verbose_name='Anotações da mentoria')),
                ('gabarito', models.JSONField(blank=True, null=True, verbose_name='Respostas do Gabarito')),
                ('mentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RespostasSimulados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_aluno', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email do Aluno')),
                ('mentor_nome', models.CharField(blank=True, max_length=50, null=True, verbose_name='Criado por:')),
                ('aluno_nome', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome do aluno')),
                ('respostas_alunos', models.JSONField(verbose_name='Respostas do Aluno')),
                ('simulado', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='simulado_respondido', to='mentorias.simulados')),
                ('student_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlanosAssinatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, verbose_name='Nome comercial')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('criado_em', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Criado em')),
                ('criado_por_pk', models.PositiveIntegerField(blank=True, null=True)),
                ('criado_por_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('criado_por_nome', models.CharField(blank=True, max_length=50, null=True)),
                ('ativo', models.BooleanField(default=False, verbose_name='Em uso')),
                ('preco', models.FloatField()),
                ('criado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('desconto', models.ManyToManyField(to='mentorias.descontos')),
            ],
        ),
        migrations.CreateModel(
            name='Mentoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Insira um título para a mentoria.', max_length=100, verbose_name='Titulo da mentoria')),
                ('criada_em', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Data criação:')),
                ('controle', models.TextField(blank=True, help_text='Anotações da Mentoria para seu controle. Apenas você terá acesso a este conteúdo.', null=True, verbose_name='Anotações da mentoria')),
                ('resumo_mentoria', models.TextField(blank=True, help_text='Se desejar, escreva um texto de apresentação desta mentoria ao estudante.', max_length=300, null=True, verbose_name='Apresentação da mentoria')),
                ('etapas', models.JSONField(blank=True, null=True, verbose_name='Etapas da mentoria')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('username_mentor', models.CharField(blank=True, max_length=50, null=True, verbose_name='Username do Mentor')),
                ('arquivos_da_mentoria', models.ManyToManyField(blank=True, help_text='Arquivos de uma mentoria são arquivos disponíveis aos estudantes \t\t\t\tque fizerem parte da mentoria.', related_name='arquivos_da_mentoria', to='mentorias.arquivosmentoria')),
                ('links_externos', models.ManyToManyField(blank=True, to='mentorias.linksexternos')),
                ('matriculas', models.ManyToManyField(blank=True, to='mentorias.matriculaalunomentoria')),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('simulados_mentoria', models.ManyToManyField(blank=True, to='mentorias.aplicacaosimulado')),
            ],
        ),
        migrations.CreateModel(
            name='Materias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=50, verbose_name='Título da matéria')),
                ('criada_em', models.DateField(default=django.utils.timezone.now, verbose_name='Criada em')),
                ('controle', models.TextField(blank=True, help_text='Anotações da matéria para seu controle. Apenas você terá acesso a este conteúdo.', null=True, verbose_name='Anotações da matéria')),
                ('peso', models.PositiveSmallIntegerField(default=1, help_text='Indique o peso da matéria para fins de cálculo de resultado final.', verbose_name='Peso da matéria')),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['titulo'],
            },
        ),
        migrations.CreateModel(
            name='AssinaturasMentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criada_em', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data assinatura')),
                ('encerra_em', models.DateField(blank=True, null=True, verbose_name='Encerra em')),
                ('pagamento', models.JSONField(blank=True, null=True, verbose_name='Controle de pagamentos')),
                ('usuario_pk', models.PositiveIntegerField(blank=True, null=True, verbose_name='Id do usuário')),
                ('usuario_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email do usuário')),
                ('usuario_nome', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do usuário')),
                ('desconto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mentorias.descontos')),
                ('plano', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mentorias.planosassinatura', verbose_name='Plano de assinatura')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
        ),
        migrations.AddField(
            model_name='arquivosmentoria',
            name='mentoria',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mentorias.mentoria'),
        ),
        migrations.AddField(
            model_name='aplicacaosimulado',
            name='matricula',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aplicacoes_matricula', to='mentorias.matriculaalunomentoria'),
        ),
        migrations.AddField(
            model_name='aplicacaosimulado',
            name='simulado',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aplicacao_simulado', to='mentorias.simulados'),
        ),
        migrations.AddField(
            model_name='alunos',
            name='arquivos_aluno',
            field=models.ManyToManyField(blank=True, help_text='Arquivos de um Aluno são arquivos disponíveis ao estudante selecionado.', to='mentorias.arquivosdoaluno'),
        ),
        migrations.AddField(
            model_name='alunos',
            name='mentor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_alunos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alunos',
            name='simulados_realizados',
            field=models.ManyToManyField(blank=True, help_text='Simulados que os alunos devem fazer.', to='mentorias.simulados'),
        ),
        migrations.AddField(
            model_name='alunos',
            name='student_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_alunos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='aplicacaosimulado',
            unique_together={('aluno', 'simulado')},
        ),
    ]
